@attribute [Authorize(Policy = "EmailPolicy")]
@page "/pbs"
@using SwimRankings.Api.Models
@using SwimrankingsComparer.Application.Extensions
@using SwimrankingsComparer.Application.Services
@inject SwimmerService Service

<PageTitle>@Constants.AppName - Prs</PageTitle>

<h1>PRs</h1>
<div class="row mb-3">
    @if (_swimmers == null)
    {
        @:Bezig met laden...
    }
    else if (!_swimmers.Any())
    {
        @:Er staan nog geen zwemmers in het systeem.
    }
    else
    {
        <div class="row mb-3">
            <div class="col-md-4">
                <div class="row">
                    <div class="col-auto"><label class="col-form-label">Zwemmer:</label></div>
                    <div class="col">
                        <select @onchange="ShowSwimmerData" class="form-control">
                            <option value="">-- Kies een zwemmer --</option>
                            @foreach (var swimmer in _swimmers)
                            {
                                <option value="@swimmer.Id">@swimmer.LastName @swimmer.FirstName</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </div>
        
        @if (_swimmer != null)
        {
            <h2>@_swimmer.FirstName @_swimmer.LastName</h2>
            <p>
                Geboortejaar: @_swimmer.YearOfBirth<br />
                Club: @_swimmer.Club<br />
                Laatste update: @_swimmer.LastUpdated.ToString("dd/MM/yyyy hh:mm")
            </p>
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Slag</th>
                        <th>Afstand</th>
                        <th>Tijd</th>
                        <th>Zwembad</th>
                        <th>Datum</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var pb in _swimmer.Pbs.OrderBy(o => o.Stroke).ThenBy(o => o.DistanceInMeters))
                {
                    <tr>
                        <td>@pb.Stroke.ToDutch()</td>
                        <td class="align-right">@(pb.DistanceInMeters)m</td>
                        <td class="align-right">@pb.SwimTime.DisplayValue</td>
                        <td class="align-right">@(pb.PoolLength)m</td>
                        <td class="align-right">@pb.Meet?.Date?.DisplayValue()</td>
                    </tr>
                }
                </tbody>
            </table>
        }
    }
</div>

@code {
    private IEnumerable<Swimmer>? _swimmers;
    private SwimmerData? _swimmer;

    protected override async Task OnInitializedAsync()
    {
        _swimmers = await Service.GetAllSwimmersAsync();
    }
    
    private async Task ShowSwimmerData(ChangeEventArgs e)
    {
        _swimmer = null;
        _swimmer = await Service.GetSwimmerDataAsync(e.Value!.ToString()!);
    }
}